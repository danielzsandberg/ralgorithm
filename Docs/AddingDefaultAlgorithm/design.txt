1. Modify setup to create directory and drop in vovo's dll.
	a. In product.wxs create new DirectoryElement under INSTALLFOLDER to create the new "Algorithms".
	b. Add a new folder in repository called includedAlgoirthms and drop vovo's dll in there.
	Building vovo's dll
		a. Pull latest source from vovo's repository into our forked version.
		b. Rename algorithm. Commit. Push.
		c. Build and put into included algorithm
2. Modify post build script to create directory and drop vovo's dll in.
	a. Use xcopy to copy dll into Algorithms directory
		i. xcopy *.bmp NewFolder\ /f /i /y
3. Create registration service for cube runners
	a. Functional specification for algorithm registrar
		i. Methods
			a. void Register(Assembly assembly)
			b. void Register(ICubeSolvingAlgorithm algorithm)
			c. void Deregister(Type type)
			d. void DeregisterAll();
			d. KeyValuePair<Type, ICubeSolvingAlgorithm>[] RegistrarCopy
			e. ICubeSolvingAlgorithm GetRegisteredAlgorithm(Type registeredType)
			e. event EventHandler<GenericEventArgs<IEnumerable<ICubeSolvingAlgorithm>>> AlgorithmsRegistered
			f. event EventHandler<GenericEventArgs<IEnumerable<ICubeSolvingAlgorithm>>> AlgorithmsDeregistered
			g. event EventHandler<GenericEventArgs<IEnumerable<ICubeSolvingAlgorithm>>> AlgorithmRegistrationUpdated
		ii. Registrar bootstrapping
			a. Instantiate registrar in Initialize.
			b. Pass into vm.
			c. In vm hook up for AlgorithmsRegistered, AlgorithmsDeregistered, AlgorithmRegistrationUpdated events
		iii. AlgorithmsRegistered, AlgorithmsDeregistered, AlgorithmRegistrationUpdated logic in vm
			a. AlgorithmsRegistered
				i. cubeRunners = cubeRunnerCreator.Create(e.Algorithms);
				ii. foreach cube runner create new CubeRunnerVM and add to observablecollection
			b. AlgorithmsDeregistered
				i. Prerequisite: Add Algorithm Type property to CubeRunner class.
				ii. foreach RunnerBarVM remove RunnerBarVM if type is equal to one of algorithms that have been deregistered
			c. AlgorithmRegistrationUpdated
				i. foreach RunnerBarVM remove and readd RunnerBarVM if type is equal to one of the algorithms that have been registered
		iv. BrowseCommand
			a. Change constructor so that it consumes a registrar
			b. In execute update so that Register is called
		v. ClearCommand
			a. Change constructor so taht is consumes a registrar
			b. Change execute so that DeregisterAll is called